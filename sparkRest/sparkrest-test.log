214   DEBUG org.eclipse.jetty.util.log - Logging to Logger[org.eclipse.jetty.util.log] via org.eclipse.jetty.util.log.Slf4jLog
216   DEBUG org.eclipse.jetty.util.log - Container org.eclipse.jetty.server.Server@3d24753a + SelectChannelConnector@0.0.0.0:9090 as connector
242   DEBUG org.eclipse.jetty.util.log - Container org.eclipse.jetty.server.Server@3d24753a + WebAppContext@54a097cc@54a097cc/,file:/home/christian/git/SpringREST/sparkRest/src/main/webapp/ as handler
242   DEBUG org.eclipse.jetty.util.log - Container WebAppContext@54a097cc@54a097cc/,file:/home/christian/git/SpringREST/sparkRest/src/main/webapp/ + ErrorPageErrorHandler@36f6e879 as error
248   DEBUG org.eclipse.jetty.util.log - Container org.eclipse.jetty.server.Server@3d24753a + SslSocketConnector@0.0.0.0:9443 as connector
248   DEBUG org.eclipse.jetty.util.log - Starting org.eclipse.jetty.server.Server@3d24753a
248   INFO  org.eclipse.jetty.util.log - jetty-8.0.0.M2
261   DEBUG org.eclipse.jetty.util.log - Container org.eclipse.jetty.server.Server@3d24753a + qtp269468037{8<=0<=0/254,-1} as threadpool
261   DEBUG org.eclipse.jetty.util.log - Starting qtp269468037{8<=0<=0/254,-1}
263   DEBUG org.eclipse.jetty.util.log - STARTED qtp269468037{8<=7<=8/254,0}
263   DEBUG org.eclipse.jetty.util.log - Starting WebAppContext@54a097cc@54a097cc/,file:/home/christian/git/SpringREST/sparkRest/src/main/webapp/
270   DEBUG org.eclipse.jetty.util.log - Thread Context class loader is: WebAppClassLoader@1165897474
270   DEBUG org.eclipse.jetty.util.log - Parent class loader is: sun.misc.Launcher$AppClassLoader@2c7b84de
270   DEBUG org.eclipse.jetty.util.log - Parent class loader is: sun.misc.Launcher$ExtClassLoader@4ac68d3e
273   DEBUG org.eclipse.jetty.util.log - Set temp dir /tmp/jetty-0.0.0.0-9090-webapp-_-any-
281   DEBUG org.eclipse.jetty.util.log - parse: jar:file:/home/christian/.m2/repository/org/eclipse/jetty/jetty-webapp/8.0.0.M2/jetty-webapp-8.0.0.M2.jar!/org/eclipse/jetty/webapp/webdefault.xml
283   DEBUG org.eclipse.jetty.util.log - parsing: sid=jar:file:/home/christian/.m2/repository/org/eclipse/jetty/jetty-webapp/8.0.0.M2/jetty-webapp-8.0.0.M2.jar!/org/eclipse/jetty/webapp/webdefault.xml,pid=null
298   DEBUG org.eclipse.jetty.util.log - jar:file:/home/christian/.m2/repository/org/eclipse/jetty/jetty-webapp/8.0.0.M2/jetty-webapp-8.0.0.M2.jar!/org/eclipse/jetty/webapp/webdefault.xml: Calculated metadatacomplete = True with version=2.5
298   DEBUG org.eclipse.jetty.util.log - parse: file:/home/christian/git/SpringREST/sparkRest/src/main/webapp/WEB-INF/web.xml
298   DEBUG org.eclipse.jetty.util.log - parsing: sid=file:/home/christian/git/SpringREST/sparkRest/src/main/webapp/WEB-INF/web.xml,pid=null
300   DEBUG org.eclipse.jetty.util.log - resolveEntity(-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN, http://java.sun.com/dtd/web-app_2_3.dtd)
300   DEBUG org.eclipse.jetty.util.log - Redirected entity http://java.sun.com/dtd/web-app_2_3.dtd --> jar:file:/home/christian/.m2/repository/org/mortbay/jetty/servlet-api/3.0.20100224/servlet-api-3.0.20100224.jar!/javax/servlet/resources/web-app_2_3.dtd
309   DEBUG org.eclipse.jetty.util.log - file:/home/christian/git/SpringREST/sparkRest/src/main/webapp/WEB-INF/web.xml: Calculated metadatacomplete = NotSet with version=DTD
323   DEBUG org.eclipse.jetty.util.log - Configuring web-jetty.xml
334   DEBUG org.eclipse.jetty.util.log - filterNameMap={}
334   DEBUG org.eclipse.jetty.util.log - pathFilters=null
334   DEBUG org.eclipse.jetty.util.log - servletFilterMap=null
334   DEBUG org.eclipse.jetty.util.log - servletPathMap={/=default}
334   DEBUG org.eclipse.jetty.util.log - servletNameMap={default=default}
336   INFO  org.eclipse.jetty.util.log - NO JSP Support for /, did not find org.apache.jasper.servlet.JspServlet
338   DEBUG org.eclipse.jetty.util.log - filterNameMap={}
338   DEBUG org.eclipse.jetty.util.log - pathFilters=null
338   DEBUG org.eclipse.jetty.util.log - servletFilterMap=null
338   DEBUG org.eclipse.jetty.util.log - servletPathMap={*.jspx=jsp, *.JSPX=jsp, *.jsp=jsp, *.JSPF=jsp, *.jspf=jsp, *.JSP=jsp, *.xsp=jsp, *.XSP=jsp, /=default}
338   DEBUG org.eclipse.jetty.util.log - servletNameMap={default=default, jsp=jsp}
353   DEBUG org.eclipse.jetty.util.log - filterNameMap={SparkFilter=SparkFilter}
353   DEBUG org.eclipse.jetty.util.log - pathFilters=[[/*]/[]==0=>SparkFilter]
353   DEBUG org.eclipse.jetty.util.log - servletFilterMap={}
353   DEBUG org.eclipse.jetty.util.log - servletPathMap={*.jspx=jsp, *.JSPX=jsp, *.jsp=jsp, *.JSPF=jsp, *.jspf=jsp, *.JSP=jsp, *.xsp=jsp, *.XSP=jsp, /=default}
353   DEBUG org.eclipse.jetty.util.log - servletNameMap={default=default, jsp=jsp}
353   DEBUG org.eclipse.jetty.util.log - filterNameMap={SparkFilter=SparkFilter}
354   DEBUG org.eclipse.jetty.util.log - pathFilters=[[/*]/[]==0=>SparkFilter]
354   DEBUG org.eclipse.jetty.util.log - servletFilterMap={}
354   DEBUG org.eclipse.jetty.util.log - servletPathMap={*.jspx=jsp, *.JSPX=jsp, *.jsp=jsp, *.JSPF=jsp, *.jspf=jsp, *.JSP=jsp, *.xsp=jsp, *.XSP=jsp, /logs=Log, /=default}
354   DEBUG org.eclipse.jetty.util.log - servletNameMap={default=default, Log=Log, jsp=jsp}
354   DEBUG org.eclipse.jetty.util.log - Container WebAppContext@54a097cc@54a097cc/,file:/home/christian/git/SpringREST/sparkRest/src/main/webapp/ + SessionHandler@32d2fa64@ as handler
354   DEBUG org.eclipse.jetty.util.log - Container ServletHandler@1d8d30f7@ + SparkFilter as filter
354   DEBUG org.eclipse.jetty.util.log - Container ServletHandler@1d8d30f7@ + [/*]/[]==0=>SparkFilter as filterMapping
354   DEBUG org.eclipse.jetty.util.log - Container ServletHandler@1d8d30f7@ + default as servlet
354   DEBUG org.eclipse.jetty.util.log - Container ServletHandler@1d8d30f7@ + jsp as servlet
355   DEBUG org.eclipse.jetty.util.log - Container ServletHandler@1d8d30f7@ + Log as servlet
355   DEBUG org.eclipse.jetty.util.log - Container ServletHandler@1d8d30f7@ + [/]=>default as servletMapping
355   DEBUG org.eclipse.jetty.util.log - Container ServletHandler@1d8d30f7@ + [*.jsp, *.jspf, *.jspx, *.xsp, *.JSP, *.JSPF, *.JSPX, *.XSP]=>jsp as servletMapping
355   DEBUG org.eclipse.jetty.util.log - Container ServletHandler@1d8d30f7@ + [/logs]=>Log as servletMapping
355   DEBUG org.eclipse.jetty.util.log - Container ConstraintSecurityHandler@3e57cd70@ + ServletHandler@1d8d30f7@ as handler
355   DEBUG org.eclipse.jetty.util.log - Container SessionHandler@32d2fa64@ + ConstraintSecurityHandler@3e57cd70@ as handler
355   DEBUG org.eclipse.jetty.util.log - Container SessionHandler@32d2fa64@ + org.eclipse.jetty.server.session.HashSessionManager@9a7504c as sessionManager
355   DEBUG org.eclipse.jetty.util.log - Starting SessionHandler@32d2fa64@
355   DEBUG org.eclipse.jetty.util.log - Starting org.eclipse.jetty.server.session.HashSessionManager@9a7504c
357   DEBUG org.eclipse.jetty.util.log - Container org.eclipse.jetty.server.Server@3d24753a + org.eclipse.jetty.server.session.HashSessionIdManager@5bb21b69 as sessionIdManager
357   DEBUG org.eclipse.jetty.util.log - Starting org.eclipse.jetty.server.session.HashSessionIdManager@5bb21b69
365   DEBUG org.eclipse.jetty.util.log - STARTED org.eclipse.jetty.server.session.HashSessionIdManager@5bb21b69
366   DEBUG org.eclipse.jetty.util.log - STARTED org.eclipse.jetty.server.session.HashSessionManager@9a7504c
366   DEBUG org.eclipse.jetty.util.log - Starting ConstraintSecurityHandler@3e57cd70@
367   DEBUG org.eclipse.jetty.util.log - Starting ServletHandler@1d8d30f7@
368   DEBUG org.eclipse.jetty.util.log - filterNameMap={SparkFilter=SparkFilter}
368   DEBUG org.eclipse.jetty.util.log - pathFilters=[[/*]/[]==0=>SparkFilter]
368   DEBUG org.eclipse.jetty.util.log - servletFilterMap={}
368   DEBUG org.eclipse.jetty.util.log - servletPathMap={*.jspx=jsp, *.JSPX=jsp, *.jsp=jsp, *.JSPF=jsp, *.jspf=jsp, *.JSP=jsp, *.xsp=jsp, *.XSP=jsp, /logs=Log, /=default}
368   DEBUG org.eclipse.jetty.util.log - servletNameMap={default=default, Log=Log, jsp=jsp}
368   DEBUG org.eclipse.jetty.util.log - starting ServletHandler@1d8d30f7@
368   DEBUG org.eclipse.jetty.util.log - STARTED ServletHandler@1d8d30f7@
368   DEBUG org.eclipse.jetty.util.log - starting ConstraintSecurityHandler@3e57cd70@
368   DEBUG org.eclipse.jetty.util.log - STARTED ConstraintSecurityHandler@3e57cd70@
368   DEBUG org.eclipse.jetty.util.log - starting SessionHandler@32d2fa64@
368   DEBUG org.eclipse.jetty.util.log - STARTED SessionHandler@32d2fa64@
368   DEBUG org.eclipse.jetty.util.log - starting WebAppContext@54a097cc@54a097cc/,file:/home/christian/git/SpringREST/sparkRest/src/main/webapp/
369   DEBUG org.eclipse.jetty.util.log - Starting ErrorPageErrorHandler@36f6e879@
369   DEBUG org.eclipse.jetty.util.log - starting ErrorPageErrorHandler@36f6e879@
369   DEBUG org.eclipse.jetty.util.log - STARTED ErrorPageErrorHandler@36f6e879@
369   DEBUG org.eclipse.jetty.util.log - Starting SparkFilter
373   DEBUG org.eclipse.jetty.util.log - loaded class spark.servlet.SparkFilter
373   DEBUG org.eclipse.jetty.util.log - loaded class spark.servlet.SparkFilter from sun.misc.Launcher$AppClassLoader@2c7b84de
373   DEBUG org.eclipse.jetty.util.log - Holding class spark.servlet.SparkFilter
375   DEBUG spark.route.RouteMatcherFactory - creates RouteMatcher
384   DEBUG spark.route.SimpleRouteMatcher - Adds route: get, /sysinfo, core.september.sparkrest.app.RestApplication$1@10a035a0
384   DEBUG spark.route.SimpleRouteMatcher - Adds route: get, /sec, core.september.sparkrest.app.RestApplication$2@67b467e9
384   DEBUG spark.route.SimpleRouteMatcher - Adds route: post, /sec/:customer/signup, core.september.sparkrest.app.RestApplication$3@47db50c5
384   DEBUG spark.route.SimpleRouteMatcher - Adds route: post, /sec/:customer/signin, core.september.sparkrest.app.RestApplication$4@5c072e3f
384   DEBUG spark.route.SimpleRouteMatcher - Adds route: get, /pub/505, core.september.sparkrest.app.RestApplication$5@4d1b0d2a
385   DEBUG spark.route.SimpleRouteMatcher - Adds route: before, /auth/*, core.september.sparkrest.app.RestApplication$6@954b04f
385   DEBUG spark.route.SimpleRouteMatcher - Adds route: get, /auth/:customer, core.september.sparkrest.app.RestApplication$7@149494d8
398   DEBUG org.eclipse.jetty.util.log - STARTED SparkFilter
399   DEBUG org.eclipse.jetty.util.log - Starting Log
400   DEBUG org.eclipse.jetty.util.log - loaded class ch.qos.logback.classic.ViewStatusMessagesServlet
400   DEBUG org.eclipse.jetty.util.log - loaded class ch.qos.logback.classic.ViewStatusMessagesServlet from sun.misc.Launcher$AppClassLoader@2c7b84de
400   DEBUG org.eclipse.jetty.util.log - Holding class ch.qos.logback.classic.ViewStatusMessagesServlet
401   DEBUG org.eclipse.jetty.util.log - STARTED Log
401   DEBUG org.eclipse.jetty.util.log - Starting default
402   DEBUG org.eclipse.jetty.util.log - loaded class org.eclipse.jetty.servlet.DefaultServlet
402   DEBUG org.eclipse.jetty.util.log - loaded class org.eclipse.jetty.servlet.DefaultServlet from sun.misc.Launcher$AppClassLoader@2c7b84de
402   DEBUG org.eclipse.jetty.util.log - Holding class org.eclipse.jetty.servlet.DefaultServlet
408   DEBUG org.eclipse.jetty.util.log - ignoring resource cache configuration, using resourceCache attribute
412   DEBUG org.eclipse.jetty.util.log - Cache resourceCache=null
413   DEBUG org.eclipse.jetty.util.log - resource base = null
413   DEBUG org.eclipse.jetty.util.log - STARTED default
413   DEBUG org.eclipse.jetty.util.log - Starting jsp
414   DEBUG org.eclipse.jetty.util.log - Holding class org.eclipse.jetty.servlet.NoJspServlet
414   DEBUG org.eclipse.jetty.util.log - STARTED jsp
414   DEBUG org.eclipse.jetty.util.log - STARTED WebAppContext@54a097cc@54a097cc/,file:/home/christian/git/SpringREST/sparkRest/src/main/webapp/
414   DEBUG org.eclipse.jetty.util.log - starting org.eclipse.jetty.server.Server@3d24753a
414   DEBUG org.eclipse.jetty.util.log - Starting SelectChannelConnector@0.0.0.0:9090
414   DEBUG org.eclipse.jetty.util.log - Starting org.eclipse.jetty.server.nio.SelectChannelConnector$1@4b53f538
418   DEBUG org.eclipse.jetty.util.log - STARTED org.eclipse.jetty.server.nio.SelectChannelConnector$1@4b53f538
421   INFO  org.eclipse.jetty.util.log - Started SelectChannelConnector@0.0.0.0:9090
422   DEBUG org.eclipse.jetty.util.log - STARTED SelectChannelConnector@0.0.0.0:9090
422   DEBUG org.eclipse.jetty.util.log - Starting SslSocketConnector@0.0.0.0:9443
589   INFO  org.eclipse.jetty.util.log - Started SslSocketConnector@0.0.0.0:9443
589   DEBUG org.eclipse.jetty.util.log - STARTED SslSocketConnector@0.0.0.0:9443
589   DEBUG org.eclipse.jetty.util.log - STARTED org.eclipse.jetty.server.Server@3d24753a
711   INFO  o.m.m.logging.MorphiaLoggerFactory - LoggerImplFactory set to org.mongodb.morphia.logging.slf4j.SLF4JLoggerImplFactory
741   DEBUG o.m.morphia.mapping.MappedClass - MappedClass done: MappedClass - kind:Address for core.september.sparkrest.entity.Address fields:[number ( type:String, single:true); {}, street ( type:String, single:true); {}, town ( type:String, single:true); {}, postcode ( type:String, single:true); {}]
754   DEBUG o.m.morphia.mapping.MappedClass - MappedClass done: MappedClass - kind:Account for core.september.sparkrest.entity.Account fields:[name ( type:String, single:true); {}, surname ( type:String, single:true); {}, hashedPassword ( type:String, single:true); {}, salt ( type:String, single:true); {}, email ( type:String, single:true); {}, token ( type:String, single:true); {}, tokenExpireAt ( type:Date, single:true); {}, address ( type:Address, single:true); {interface org.mongodb.morphia.annotations.Embedded=@org.mongodb.morphia.annotations.Embedded(value=., concreteClass=class java.lang.Object)}, _id ( type:ObjectId, single:true); {interface org.mongodb.morphia.annotations.Property=@org.mongodb.morphia.annotations.Property(value=id, concreteClass=class java.lang.Object), interface org.mongodb.morphia.annotations.Id=@org.mongodb.morphia.annotations.Id()}, version ( type:Long, single:true); {interface org.mongodb.morphia.annotations.Property=@org.mongodb.morphia.annotations.Property(value=version, concreteClass=class java.lang.Object), interface org.mongodb.morphia.annotations.Version=@org.mongodb.morphia.annotations.Version(value=.)}]
756   DEBUG o.m.morphia.mapping.MappedField - found instance of ParameterizedType : java.util.List<core.september.sparkrest.entity.Account>
756   DEBUG o.m.morphia.mapping.MappedClass - MappedClass done: MappedClass - kind:Customer for core.september.sparkrest.entity.Customer fields:[name ( type:String, single:true); {}, accounts ( type:List, multiple:true, subtype:class core.september.sparkrest.entity.Account, collection:true); {}, address ( type:Address, single:true); {interface org.mongodb.morphia.annotations.Embedded=@org.mongodb.morphia.annotations.Embedded(value=., concreteClass=class java.lang.Object)}, _id ( type:ObjectId, single:true); {interface org.mongodb.morphia.annotations.Property=@org.mongodb.morphia.annotations.Property(value=id, concreteClass=class java.lang.Object), interface org.mongodb.morphia.annotations.Id=@org.mongodb.morphia.annotations.Id()}, version ( type:Long, single:true); {interface org.mongodb.morphia.annotations.Property=@org.mongodb.morphia.annotations.Property(value=version, concreteClass=class java.lang.Object), interface org.mongodb.morphia.annotations.Version=@org.mongodb.morphia.annotations.Version(value=.)}]
867   DEBUG o.m.morphia.mapping.MappedField - found instance of ParameterizedType : java.util.List<core.september.sparkrest.entity.Account>
867   DEBUG o.m.morphia.mapping.MappedClass - MappedClass done: MappedClass - kind:Customer for core.september.sparkrest.entity.Customer fields:[name ( type:String, single:true); {}, accounts ( type:List, multiple:true, subtype:class core.september.sparkrest.entity.Account, collection:true); {}, address ( type:Address, single:true); {interface org.mongodb.morphia.annotations.Embedded=@org.mongodb.morphia.annotations.Embedded(value=., concreteClass=class java.lang.Object)}, _id ( type:ObjectId, single:true); {interface org.mongodb.morphia.annotations.Property=@org.mongodb.morphia.annotations.Property(value=id, concreteClass=class java.lang.Object), interface org.mongodb.morphia.annotations.Id=@org.mongodb.morphia.annotations.Id()}, version ( type:Long, single:true); {interface org.mongodb.morphia.annotations.Property=@org.mongodb.morphia.annotations.Property(value=version, concreteClass=class java.lang.Object), interface org.mongodb.morphia.annotations.Version=@org.mongodb.morphia.annotations.Version(value=.)}]
869   DEBUG org.mongodb.morphia.mapping.Mapper - No annotation was found, using default mapper org.mongodb.morphia.mapping.EmbeddedMapper@d29f28 for accounts ( type:List, multiple:true, subtype:class core.september.sparkrest.entity.Account, collection:true); {}
1115  DEBUG org.eclipse.jetty.util.log - REQUEST /sec/september/signup on org.eclipse.jetty.server.HttpConnection@2cb2f339
1116  DEBUG org.eclipse.jetty.util.log - sessionManager=org.eclipse.jetty.server.session.HashSessionManager@9a7504c
1116  DEBUG org.eclipse.jetty.util.log - session=null
1116  DEBUG org.eclipse.jetty.util.log - servlet=default
1116  DEBUG org.eclipse.jetty.util.log - servlet holder=
1118  DEBUG org.eclipse.jetty.util.log - chain=
1119  DEBUG org.eclipse.jetty.util.log - call filter SparkFilter
1119  DEBUG spark.servlet.SparkFilter - /sec/september/signup
1121  DEBUG spark.webserver.MatcherFilter - httpMethod:post, uri: /sec/september/signup
1123  DEBUG spark.Request - get params
1123  DEBUG spark.Request - matchedPart: :customer = september
1123  DEBUG spark.Request - get splat
1131  DEBUG o.m.morphia.mapping.MappedField - found instance of ParameterizedType : java.util.List<core.september.sparkrest.entity.Account>
1132  DEBUG o.m.morphia.mapping.MappedClass - MappedClass done: MappedClass - kind:Customer for core.september.sparkrest.entity.Customer fields:[name ( type:String, single:true); {}, accounts ( type:List, multiple:true, subtype:class core.september.sparkrest.entity.Account, collection:true); {}, address ( type:Address, single:true); {interface org.mongodb.morphia.annotations.Embedded=@org.mongodb.morphia.annotations.Embedded(value=., concreteClass=class java.lang.Object)}, _id ( type:ObjectId, single:true); {interface org.mongodb.morphia.annotations.Property=@org.mongodb.morphia.annotations.Property(value=id, concreteClass=class java.lang.Object), interface org.mongodb.morphia.annotations.Id=@org.mongodb.morphia.annotations.Id()}, version ( type:Long, single:true); {interface org.mongodb.morphia.annotations.Property=@org.mongodb.morphia.annotations.Property(value=version, concreteClass=class java.lang.Object), interface org.mongodb.morphia.annotations.Version=@org.mongodb.morphia.annotations.Version(value=.)}]
1144  DEBUG o.m.morphia.mapping.MappedClass - MappedClass done: MappedClass - kind:String for java.lang.String fields:[value ( type:char[], multiple:true, subtype:char, array:true); {}, hash ( type:int, single:true); {}]
1148  DEBUG org.eclipse.jetty.util.log - loaded class core.september.sparkrest.entity.Customer
1148  DEBUG org.eclipse.jetty.util.log - loaded class core.september.sparkrest.entity.Customer from sun.misc.Launcher$AppClassLoader@2c7b84de
1150  DEBUG o.m.morphia.mapping.MappedClass - MappedClass done: MappedClass - kind:Account for core.september.sparkrest.entity.Account fields:[name ( type:String, single:true); {}, surname ( type:String, single:true); {}, hashedPassword ( type:String, single:true); {}, salt ( type:String, single:true); {}, email ( type:String, single:true); {}, token ( type:String, single:true); {}, tokenExpireAt ( type:Date, single:true); {}, address ( type:Address, single:true); {interface org.mongodb.morphia.annotations.Embedded=@org.mongodb.morphia.annotations.Embedded(value=., concreteClass=class java.lang.Object)}, _id ( type:ObjectId, single:true); {interface org.mongodb.morphia.annotations.Property=@org.mongodb.morphia.annotations.Property(value=id, concreteClass=class java.lang.Object), interface org.mongodb.morphia.annotations.Id=@org.mongodb.morphia.annotations.Id()}, version ( type:Long, single:true); {interface org.mongodb.morphia.annotations.Property=@org.mongodb.morphia.annotations.Property(value=version, concreteClass=class java.lang.Object), interface org.mongodb.morphia.annotations.Version=@org.mongodb.morphia.annotations.Version(value=.)}]
1153  DEBUG org.mongodb.morphia.mapping.Mapper - No annotation was found, using default mapper org.mongodb.morphia.mapping.EmbeddedMapper@d29f28 for accounts ( type:List, multiple:true, subtype:class core.september.sparkrest.entity.Account, collection:true); {}
1154  DEBUG o.m.morphia.mapping.MappedClass - MappedClass done: MappedClass - kind:ObjectId for org.bson.types.ObjectId fields:[_time ( type:int, single:true); {}, _machine ( type:int, single:true); {}, _inc ( type:int, single:true); {}, _new ( type:boolean, single:true); {}]
1157  DEBUG spark.webserver.MatcherFilter - Time for request: 37
1158  DEBUG org.eclipse.jetty.util.log - RESPONSE /sec/september/signup  200
1191  DEBUG org.eclipse.jetty.util.log - REQUEST /sec/september/signin on org.eclipse.jetty.server.HttpConnection@5fba836d
1191  DEBUG org.eclipse.jetty.util.log - sessionManager=org.eclipse.jetty.server.session.HashSessionManager@9a7504c
1191  DEBUG org.eclipse.jetty.util.log - session=null
1191  DEBUG org.eclipse.jetty.util.log - servlet=default
1191  DEBUG org.eclipse.jetty.util.log - servlet holder=
1191  DEBUG org.eclipse.jetty.util.log - chain=
1191  DEBUG org.eclipse.jetty.util.log - call filter SparkFilter
1191  DEBUG spark.servlet.SparkFilter - /sec/september/signin
1191  DEBUG spark.webserver.MatcherFilter - httpMethod:post, uri: /sec/september/signin
1192  DEBUG spark.Request - get params
1192  DEBUG spark.Request - matchedPart: :customer = september
1192  DEBUG spark.Request - get splat
1194  DEBUG o.m.morphia.mapping.MappedField - found instance of ParameterizedType : java.util.List<core.september.sparkrest.entity.Account>
1195  DEBUG o.m.morphia.mapping.MappedClass - MappedClass done: MappedClass - kind:Customer for core.september.sparkrest.entity.Customer fields:[name ( type:String, single:true); {}, accounts ( type:List, multiple:true, subtype:class core.september.sparkrest.entity.Account, collection:true); {}, address ( type:Address, single:true); {interface org.mongodb.morphia.annotations.Embedded=@org.mongodb.morphia.annotations.Embedded(value=., concreteClass=class java.lang.Object)}, _id ( type:ObjectId, single:true); {interface org.mongodb.morphia.annotations.Property=@org.mongodb.morphia.annotations.Property(value=id, concreteClass=class java.lang.Object), interface org.mongodb.morphia.annotations.Id=@org.mongodb.morphia.annotations.Id()}, version ( type:Long, single:true); {interface org.mongodb.morphia.annotations.Property=@org.mongodb.morphia.annotations.Property(value=version, concreteClass=class java.lang.Object), interface org.mongodb.morphia.annotations.Version=@org.mongodb.morphia.annotations.Version(value=.)}]
1197  DEBUG o.m.morphia.mapping.MappedClass - MappedClass done: MappedClass - kind:Account for core.september.sparkrest.entity.Account fields:[name ( type:String, single:true); {}, surname ( type:String, single:true); {}, hashedPassword ( type:String, single:true); {}, salt ( type:String, single:true); {}, email ( type:String, single:true); {}, token ( type:String, single:true); {}, tokenExpireAt ( type:Date, single:true); {}, address ( type:Address, single:true); {interface org.mongodb.morphia.annotations.Embedded=@org.mongodb.morphia.annotations.Embedded(value=., concreteClass=class java.lang.Object)}, _id ( type:ObjectId, single:true); {interface org.mongodb.morphia.annotations.Property=@org.mongodb.morphia.annotations.Property(value=id, concreteClass=class java.lang.Object), interface org.mongodb.morphia.annotations.Id=@org.mongodb.morphia.annotations.Id()}, version ( type:Long, single:true); {interface org.mongodb.morphia.annotations.Property=@org.mongodb.morphia.annotations.Property(value=version, concreteClass=class java.lang.Object), interface org.mongodb.morphia.annotations.Version=@org.mongodb.morphia.annotations.Version(value=.)}]
1198  DEBUG org.eclipse.jetty.util.log - loaded class core.september.sparkrest.entity.Account
1198  DEBUG org.eclipse.jetty.util.log - loaded class core.september.sparkrest.entity.Account from sun.misc.Launcher$AppClassLoader@2c7b84de
1200  DEBUG spark.webserver.MatcherFilter - Time for request: 9
1200  DEBUG org.eclipse.jetty.util.log - RESPONSE /sec/september/signin  200
1202  DEBUG o.m.morphia.mapping.MappedClass - MappedClass done: MappedClass - kind:Account for core.september.sparkrest.entity.Account fields:[name ( type:String, single:true); {}, surname ( type:String, single:true); {}, hashedPassword ( type:String, single:true); {}, salt ( type:String, single:true); {}, email ( type:String, single:true); {}, token ( type:String, single:true); {}, tokenExpireAt ( type:Date, single:true); {}, address ( type:Address, single:true); {interface org.mongodb.morphia.annotations.Embedded=@org.mongodb.morphia.annotations.Embedded(value=., concreteClass=class java.lang.Object)}, _id ( type:ObjectId, single:true); {interface org.mongodb.morphia.annotations.Property=@org.mongodb.morphia.annotations.Property(value=id, concreteClass=class java.lang.Object), interface org.mongodb.morphia.annotations.Id=@org.mongodb.morphia.annotations.Id()}, version ( type:Long, single:true); {interface org.mongodb.morphia.annotations.Property=@org.mongodb.morphia.annotations.Property(value=version, concreteClass=class java.lang.Object), interface org.mongodb.morphia.annotations.Version=@org.mongodb.morphia.annotations.Version(value=.)}]
1209  DEBUG org.eclipse.jetty.util.log - REQUEST /auth/uno on org.eclipse.jetty.server.nio.SelectChannelConnector$3@7ecd8fd4
1209  DEBUG org.eclipse.jetty.util.log - sessionManager=org.eclipse.jetty.server.session.HashSessionManager@9a7504c
1209  DEBUG org.eclipse.jetty.util.log - session=null
1210  DEBUG org.eclipse.jetty.util.log - servlet=default
1210  DEBUG org.eclipse.jetty.util.log - servlet holder=
1210  DEBUG org.eclipse.jetty.util.log - chain=
1210  DEBUG org.eclipse.jetty.util.log - call filter SparkFilter
1210  DEBUG spark.servlet.SparkFilter - /auth/uno
1210  DEBUG spark.webserver.MatcherFilter - httpMethod:get, uri: /auth/uno
1210  DEBUG spark.Request - get params
1210  DEBUG spark.Request - get splat
1211  DEBUG o.m.morphia.mapping.MappedClass - MappedClass done: MappedClass - kind:Account for core.september.sparkrest.entity.Account fields:[name ( type:String, single:true); {}, surname ( type:String, single:true); {}, hashedPassword ( type:String, single:true); {}, salt ( type:String, single:true); {}, email ( type:String, single:true); {}, token ( type:String, single:true); {}, tokenExpireAt ( type:Date, single:true); {}, address ( type:Address, single:true); {interface org.mongodb.morphia.annotations.Embedded=@org.mongodb.morphia.annotations.Embedded(value=., concreteClass=class java.lang.Object)}, _id ( type:ObjectId, single:true); {interface org.mongodb.morphia.annotations.Property=@org.mongodb.morphia.annotations.Property(value=id, concreteClass=class java.lang.Object), interface org.mongodb.morphia.annotations.Id=@org.mongodb.morphia.annotations.Id()}, version ( type:Long, single:true); {interface org.mongodb.morphia.annotations.Property=@org.mongodb.morphia.annotations.Property(value=version, concreteClass=class java.lang.Object), interface org.mongodb.morphia.annotations.Version=@org.mongodb.morphia.annotations.Version(value=.)}]
1212  DEBUG spark.Request - get params
1213  DEBUG spark.Request - matchedPart: :customer = uno
1213  DEBUG spark.Request - get splat
1213  DEBUG spark.webserver.MatcherFilter - Time for request: 3
1213  DEBUG org.eclipse.jetty.util.log - RESPONSE /auth/uno  200
1215  DEBUG o.m.morphia.mapping.MappedClass - MappedClass done: MappedClass - kind:Account for core.september.sparkrest.entity.Account fields:[name ( type:String, single:true); {}, surname ( type:String, single:true); {}, hashedPassword ( type:String, single:true); {}, salt ( type:String, single:true); {}, email ( type:String, single:true); {}, token ( type:String, single:true); {}, tokenExpireAt ( type:Date, single:true); {}, address ( type:Address, single:true); {interface org.mongodb.morphia.annotations.Embedded=@org.mongodb.morphia.annotations.Embedded(value=., concreteClass=class java.lang.Object)}, _id ( type:ObjectId, single:true); {interface org.mongodb.morphia.annotations.Property=@org.mongodb.morphia.annotations.Property(value=id, concreteClass=class java.lang.Object), interface org.mongodb.morphia.annotations.Id=@org.mongodb.morphia.annotations.Id()}, version ( type:Long, single:true); {interface org.mongodb.morphia.annotations.Property=@org.mongodb.morphia.annotations.Property(value=version, concreteClass=class java.lang.Object), interface org.mongodb.morphia.annotations.Version=@org.mongodb.morphia.annotations.Version(value=.)}]
